// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`the rehype plugin, given an ast with headings > should return an ast with a table of contents and anchored headers 1`] = `
{
  "children": [
    {
      "data": {
        "estree": {
          "body": [
            {
              "declaration": {
                "declarations": [
                  {
                    "id": {
                      "name": "frontmatter",
                      "type": "Identifier",
                    },
                    "init": {
                      "properties": [
                        {
                          "computed": false,
                          "key": {
                            "type": "Literal",
                            "value": "title",
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false,
                          "type": "Property",
                          "value": {
                            "type": "Literal",
                            "value": "HMLR Group, Inc.",
                          },
                        },
                        {
                          "computed": false,
                          "key": {
                            "type": "Literal",
                            "value": "id",
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false,
                          "type": "Property",
                          "value": {
                            "type": "Literal",
                            "value": "106fe3f9-e064-47d4-9f04-802a26089921",
                          },
                        },
                        {
                          "computed": false,
                          "key": {
                            "type": "Literal",
                            "value": "categories",
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false,
                          "type": "Property",
                          "value": {
                            "elements": [
                              {
                                "type": "Literal",
                                "value": "Branding",
                              },
                            ],
                            "type": "ArrayExpression",
                          },
                        },
                        {
                          "computed": false,
                          "key": {
                            "type": "Literal",
                            "value": "tags",
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false,
                          "type": "Property",
                          "value": {
                            "elements": [
                              {
                                "type": "Literal",
                                "value": "Small Business",
                              },
                              {
                                "type": "Literal",
                                "value": "Graphic Design",
                              },
                              {
                                "type": "Literal",
                                "value": "Logo Design",
                              },
                              {
                                "type": "Literal",
                                "value": "Print Media",
                              },
                            ],
                            "type": "ArrayExpression",
                          },
                        },
                        {
                          "computed": false,
                          "key": {
                            "type": "Literal",
                            "value": "published",
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false,
                          "type": "Property",
                          "value": {
                            "type": "Literal",
                            "value": "01/09/2021",
                          },
                        },
                        {
                          "computed": false,
                          "key": {
                            "name": "tableOfContents",
                            "type": "PrivateIdentifier",
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false,
                          "type": "Property",
                          "value": ArrayExpression {
                            "elements": [
                              ObjectExpression {
                                "properties": [
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "title",
                                      "type": "Literal",
                                      "value": "title",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "Summary",
                                      "type": "Literal",
                                      "value": "Summary",
                                    },
                                  },
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "id",
                                      "type": "Literal",
                                      "value": "id",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "summary",
                                      "type": "Literal",
                                      "value": "summary",
                                    },
                                  },
                                ],
                                "type": "ObjectExpression",
                              },
                              ObjectExpression {
                                "properties": [
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "title",
                                      "type": "Literal",
                                      "value": "title",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "Future-proof branding to match the company's intended image",
                                      "type": "Literal",
                                      "value": "Future-proof branding to match the company's intended image",
                                    },
                                  },
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "id",
                                      "type": "Literal",
                                      "value": "id",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "future-proof-branding-to-match-the-company-s-intended-image",
                                      "type": "Literal",
                                      "value": "future-proof-branding-to-match-the-company-s-intended-image",
                                    },
                                  },
                                ],
                                "type": "ObjectExpression",
                              },
                              ObjectExpression {
                                "properties": [
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "title",
                                      "type": "Literal",
                                      "value": "title",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "Final Renders",
                                      "type": "Literal",
                                      "value": "Final Renders",
                                    },
                                  },
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "id",
                                      "type": "Literal",
                                      "value": "id",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "final-renders",
                                      "type": "Literal",
                                      "value": "final-renders",
                                    },
                                  },
                                ],
                                "type": "ObjectExpression",
                              },
                              ObjectExpression {
                                "properties": [
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "title",
                                      "type": "Literal",
                                      "value": "title",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "Color Palette",
                                      "type": "Literal",
                                      "value": "Color Palette",
                                    },
                                  },
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "id",
                                      "type": "Literal",
                                      "value": "id",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "color-palette",
                                      "type": "Literal",
                                      "value": "color-palette",
                                    },
                                  },
                                ],
                                "type": "ObjectExpression",
                              },
                              ObjectExpression {
                                "properties": [
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "title",
                                      "type": "Literal",
                                      "value": "title",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "Typography",
                                      "type": "Literal",
                                      "value": "Typography",
                                    },
                                  },
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "id",
                                      "type": "Literal",
                                      "value": "id",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "typography",
                                      "type": "Literal",
                                      "value": "typography",
                                    },
                                  },
                                ],
                                "type": "ObjectExpression",
                              },
                              ObjectExpression {
                                "properties": [
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "title",
                                      "type": "Literal",
                                      "value": "title",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "Past Iterations",
                                      "type": "Literal",
                                      "value": "Past Iterations",
                                    },
                                  },
                                  StringProperty {
                                    "computed": false,
                                    "key": SimpleLiteral {
                                      "raw": "id",
                                      "type": "Literal",
                                      "value": "id",
                                    },
                                    "kind": "init",
                                    "method": false,
                                    "shorthand": false,
                                    "type": "Property",
                                    "value": SimpleLiteral {
                                      "raw": "past-iterations",
                                      "type": "Literal",
                                      "value": "past-iterations",
                                    },
                                  },
                                ],
                                "type": "ObjectExpression",
                              },
                            ],
                            "type": "ArrayExpression",
                          },
                        },
                      ],
                      "type": "ObjectExpression",
                    },
                    "type": "VariableDeclarator",
                  },
                ],
                "kind": "const",
                "type": "VariableDeclaration",
              },
              "specifiers": [],
              "type": "ExportNamedDeclaration",
            },
          ],
          "sourceType": "module",
          "type": "Program",
        },
      },
      "type": "mdxjsEsm",
      "value": "",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        AnchorElement {
          "children": [
            {
              "position": {
                "end": {
                  "column": 11,
                  "line": 9,
                  "offset": 194,
                },
                "start": {
                  "column": 4,
                  "line": 9,
                  "offset": 187,
                },
              },
              "type": "text",
              "value": "Summary",
            },
          ],
          "properties": {
            "href": "#summary",
          },
          "tagName": "a",
          "type": "element",
        },
      ],
      "position": {
        "end": {
          "column": 11,
          "line": 9,
          "offset": 194,
        },
        "start": {
          "column": 1,
          "line": 9,
          "offset": 184,
        },
      },
      "properties": {
        "id": "summary",
      },
      "tagName": "h2",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        AnchorElement {
          "children": [
            {
              "position": {
                "end": {
                  "column": 64,
                  "line": 11,
                  "offset": 259,
                },
                "start": {
                  "column": 5,
                  "line": 11,
                  "offset": 200,
                },
              },
              "type": "text",
              "value": "Future-proof branding to match the company's intended image",
            },
          ],
          "properties": {
            "href": "#future-proof-branding-to-match-the-company-s-intended-image",
          },
          "tagName": "a",
          "type": "element",
        },
      ],
      "position": {
        "end": {
          "column": 64,
          "line": 11,
          "offset": 259,
        },
        "start": {
          "column": 1,
          "line": 11,
          "offset": 196,
        },
      },
      "properties": {
        "id": "future-proof-branding-to-match-the-company-s-intended-image",
      },
      "tagName": "h3",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        {
          "position": {
            "end": {
              "column": 308,
              "line": 13,
              "offset": 568,
            },
            "start": {
              "column": 1,
              "line": 13,
              "offset": 261,
            },
          },
          "type": "text",
          "value": "HMLR was founded as a company to manage smaller NPO's and educational companies. For a designer, this translates as their actual name, brand or logo would only appear on their website, business cards, and letterheads as it is more of "management" company to bring all the founders' companies under one name.",
        },
      ],
      "position": {
        "end": {
          "column": 308,
          "line": 13,
          "offset": 568,
        },
        "start": {
          "column": 1,
          "line": 13,
          "offset": 261,
        },
      },
      "properties": {},
      "tagName": "p",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        {
          "position": {
            "end": {
              "column": 21,
              "line": 15,
              "offset": 590,
            },
            "start": {
              "column": 1,
              "line": 15,
              "offset": 570,
            },
          },
          "type": "text",
          "value": "When the brand mark ",
        },
        {
          "children": [
            {
              "position": {
                "end": {
                  "column": 26,
                  "line": 15,
                  "offset": 595,
                },
                "start": {
                  "column": 22,
                  "line": 15,
                  "offset": 591,
                },
              },
              "type": "text",
              "value": "does",
            },
          ],
          "position": {
            "end": {
              "column": 27,
              "line": 15,
              "offset": 596,
            },
            "start": {
              "column": 21,
              "line": 15,
              "offset": 590,
            },
          },
          "properties": {},
          "tagName": "em",
          "type": "element",
        },
        {
          "position": {
            "end": {
              "column": 563,
              "line": 15,
              "offset": 1132,
            },
            "start": {
              "column": 27,
              "line": 15,
              "offset": 596,
            },
          },
          "type": "text",
          "value": " appear, however, it is displayed across multiple industries that sometimes have little to do with each other in terms of marketing and audience, e.g. education, I.T. and charity. Thus emerges the main problem: The brandmark needs to embody HMLR Group's virtues across varying industries. The solution to this problem is a logotype, rather than a logo for legibility reasons. For example, when somebody encounters the mark, they should be able to immediately read it rather than having to associate a pictograph to its relative company.",
        },
      ],
      "position": {
        "end": {
          "column": 563,
          "line": 15,
          "offset": 1132,
        },
        "start": {
          "column": 1,
          "line": 15,
          "offset": 570,
        },
      },
      "properties": {},
      "tagName": "p",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        {
          "position": {
            "end": {
              "column": 387,
              "line": 17,
              "offset": 1520,
            },
            "start": {
              "column": 1,
              "line": 17,
              "offset": 1134,
            },
          },
          "type": "text",
          "value": "Since HMLR is an American company with its contacts being either well-versed or fluent in English, the solution to this company's problem is a logotype (or wordmark) rather than a logo for legibility reasons. For example, when somebody encounters the mark, they would be able to immediately read it rather than having to associate a pictorial or abstract mark to its respective company.",
        },
      ],
      "position": {
        "end": {
          "column": 387,
          "line": 17,
          "offset": 1520,
        },
        "start": {
          "column": 1,
          "line": 17,
          "offset": 1134,
        },
      },
      "properties": {},
      "tagName": "p",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        AnchorElement {
          "children": [
            {
              "position": {
                "end": {
                  "column": 17,
                  "line": 19,
                  "offset": 1538,
                },
                "start": {
                  "column": 4,
                  "line": 19,
                  "offset": 1525,
                },
              },
              "type": "text",
              "value": "Final Renders",
            },
          ],
          "properties": {
            "href": "#final-renders",
          },
          "tagName": "a",
          "type": "element",
        },
      ],
      "position": {
        "end": {
          "column": 17,
          "line": 19,
          "offset": 1538,
        },
        "start": {
          "column": 1,
          "line": 19,
          "offset": 1522,
        },
      },
      "properties": {
        "id": "final-renders",
      },
      "tagName": "h2",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "attributes": [
        {
          "name": "gallery",
          "position": {
            "end": {
              "column": 13,
              "line": 1,
              "offset": 12,
            },
            "start": {
              "column": 6,
              "line": 1,
              "offset": 5,
            },
          },
          "type": "mdxJsxAttribute",
          "value": null,
        },
      ],
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "images:
  - src: /images/2017/01/business-card-mockup.jpg
  - src: /images/2017/01/business-card-mockup2.jpg
  - src: /images/2017/01/04.jpg
  - src: /images/2017/01/Asset-4_2k.png
  - src: /images/2017/01/Asset-5_2k-1.png
  - src: /images/2017/01/Asset-6_2k-1.png
",
            },
          ],
          "data": {
            "meta": "gallery",
          },
          "position": {
            "end": {
              "column": 4,
              "line": 29,
              "offset": 1824,
            },
            "start": {
              "column": 1,
              "line": 21,
              "offset": 1540,
            },
          },
          "properties": {
            "className": [
              "language-yaml",
            ],
          },
          "tagName": "code",
          "type": "element",
        },
      ],
      "name": "pre",
      "position": {
        "end": {
          "column": 4,
          "line": 29,
          "offset": 1824,
        },
        "start": {
          "column": 1,
          "line": 21,
          "offset": 1540,
        },
      },
      "type": "mdxJsxFlowElement",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        AnchorElement {
          "children": [
            {
              "position": {
                "end": {
                  "column": 17,
                  "line": 31,
                  "offset": 1842,
                },
                "start": {
                  "column": 4,
                  "line": 31,
                  "offset": 1829,
                },
              },
              "type": "text",
              "value": "Color Palette",
            },
          ],
          "properties": {
            "href": "#color-palette",
          },
          "tagName": "a",
          "type": "element",
        },
      ],
      "position": {
        "end": {
          "column": 17,
          "line": 31,
          "offset": 1842,
        },
        "start": {
          "column": 1,
          "line": 31,
          "offset": 1826,
        },
      },
      "properties": {
        "id": "color-palette",
      },
      "tagName": "h2",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        {
          "position": {
            "end": {
              "column": 350,
              "line": 33,
              "offset": 2193,
            },
            "start": {
              "column": 1,
              "line": 33,
              "offset": 1844,
            },
          },
          "type": "text",
          "value": "The color scheme developed to a monochromatic relationship between a natural dark navy blue and a light cool gray. The company operates solely in the United States, where blue is a respected color across the country's industries and these monochromatic shades of slate blue portray the perfect balance of a neutral, balanced, and respected business.",
        },
      ],
      "position": {
        "end": {
          "column": 350,
          "line": 33,
          "offset": 2193,
        },
        "start": {
          "column": 1,
          "line": 33,
          "offset": 1844,
        },
      },
      "properties": {},
      "tagName": "p",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "attributes": [
        {
          "name": "palette",
          "position": {
            "end": {
              "column": 13,
              "line": 1,
              "offset": 12,
            },
            "start": {
              "column": 6,
              "line": 1,
              "offset": 5,
            },
          },
          "type": "mdxJsxAttribute",
          "value": null,
        },
      ],
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "colors:
  - name: Ship Gray
    hex: '#433C4C'
  - name: Black Squeeze
    hex: '#EBF3F8'
",
            },
          ],
          "data": {
            "meta": "palette",
          },
          "position": {
            "end": {
              "column": 4,
              "line": 41,
              "offset": 2304,
            },
            "start": {
              "column": 1,
              "line": 35,
              "offset": 2195,
            },
          },
          "properties": {
            "className": [
              "language-yaml",
            ],
          },
          "tagName": "code",
          "type": "element",
        },
      ],
      "name": "pre",
      "position": {
        "end": {
          "column": 4,
          "line": 41,
          "offset": 2304,
        },
        "start": {
          "column": 1,
          "line": 35,
          "offset": 2195,
        },
      },
      "type": "mdxJsxFlowElement",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        AnchorElement {
          "children": [
            {
              "position": {
                "end": {
                  "column": 14,
                  "line": 43,
                  "offset": 2319,
                },
                "start": {
                  "column": 4,
                  "line": 43,
                  "offset": 2309,
                },
              },
              "type": "text",
              "value": "Typography",
            },
          ],
          "properties": {
            "href": "#typography",
          },
          "tagName": "a",
          "type": "element",
        },
      ],
      "position": {
        "end": {
          "column": 14,
          "line": 43,
          "offset": 2319,
        },
        "start": {
          "column": 1,
          "line": 43,
          "offset": 2306,
        },
      },
      "properties": {
        "id": "typography",
      },
      "tagName": "h2",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        {
          "position": {
            "end": {
              "column": 264,
              "line": 45,
              "offset": 2584,
            },
            "start": {
              "column": 1,
              "line": 45,
              "offset": 2321,
            },
          },
          "type": "text",
          "value": "The operating radius of this company is only in the States, opening up our choices (in terms of legibility) to both serif and sans-serif. Since one of the values of the company is the history of the founders, a classic serif font like Lora does the job perfectly.",
        },
      ],
      "position": {
        "end": {
          "column": 264,
          "line": 45,
          "offset": 2584,
        },
        "start": {
          "column": 1,
          "line": 45,
          "offset": 2321,
        },
      },
      "properties": {},
      "tagName": "p",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "attributes": [
        {
          "name": "font",
          "position": {
            "end": {
              "column": 10,
              "line": 1,
              "offset": 9,
            },
            "start": {
              "column": 6,
              "line": 1,
              "offset": 5,
            },
          },
          "type": "mdxJsxAttribute",
          "value": null,
        },
      ],
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "font:
  url: https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap
",
            },
          ],
          "data": {
            "meta": "font",
          },
          "position": {
            "end": {
              "column": 4,
              "line": 50,
              "offset": 2706,
            },
            "start": {
              "column": 1,
              "line": 47,
              "offset": 2586,
            },
          },
          "properties": {
            "className": [
              "language-yaml",
            ],
          },
          "tagName": "code",
          "type": "element",
        },
      ],
      "name": "pre",
      "position": {
        "end": {
          "column": 4,
          "line": 50,
          "offset": 2706,
        },
        "start": {
          "column": 1,
          "line": 47,
          "offset": 2586,
        },
      },
      "type": "mdxJsxFlowElement",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        AnchorElement {
          "children": [
            {
              "position": {
                "end": {
                  "column": 19,
                  "line": 52,
                  "offset": 2726,
                },
                "start": {
                  "column": 4,
                  "line": 52,
                  "offset": 2711,
                },
              },
              "type": "text",
              "value": "Past Iterations",
            },
          ],
          "properties": {
            "href": "#past-iterations",
          },
          "tagName": "a",
          "type": "element",
        },
      ],
      "position": {
        "end": {
          "column": 19,
          "line": 52,
          "offset": 2726,
        },
        "start": {
          "column": 1,
          "line": 52,
          "offset": 2708,
        },
      },
      "properties": {
        "id": "past-iterations",
      },
      "tagName": "h2",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "children": [
        {
          "position": {
            "end": {
              "column": 327,
              "line": 54,
              "offset": 3054,
            },
            "start": {
              "column": 1,
              "line": 54,
              "offset": 2728,
            },
          },
          "type": "text",
          "value": "These older iterations were based on a pastel color palette often seen in Indian home interiors — India being the founders' motherland. However, this palette and brand mark would not reflect the company's intended identity in the area they operate. Green and pink would not be associated with a solid, respected company image.",
        },
      ],
      "position": {
        "end": {
          "column": 327,
          "line": 54,
          "offset": 3054,
        },
        "start": {
          "column": 1,
          "line": 54,
          "offset": 2728,
        },
      },
      "properties": {},
      "tagName": "p",
      "type": "element",
    },
    {
      "type": "text",
      "value": "
",
    },
    {
      "attributes": [
        {
          "name": "gallery",
          "position": {
            "end": {
              "column": 13,
              "line": 1,
              "offset": 12,
            },
            "start": {
              "column": 6,
              "line": 1,
              "offset": 5,
            },
          },
          "type": "mdxJsxAttribute",
          "value": null,
        },
      ],
      "children": [
        {
          "children": [
            {
              "type": "text",
              "value": "images:
  - src: /images/2017/01/Asset-4_2k.png
  - src: /images/2017/01/Asset-5_2k-1.png
  - src: /images/2017/01/Asset-6_2k-1.png
",
            },
          ],
          "data": {
            "meta": "gallery",
          },
          "position": {
            "end": {
              "column": 4,
              "line": 61,
              "offset": 3207,
            },
            "start": {
              "column": 1,
              "line": 56,
              "offset": 3056,
            },
          },
          "properties": {
            "className": [
              "language-yaml",
            ],
          },
          "tagName": "code",
          "type": "element",
        },
      ],
      "name": "pre",
      "position": {
        "end": {
          "column": 4,
          "line": 61,
          "offset": 3207,
        },
        "start": {
          "column": 1,
          "line": 56,
          "offset": 3056,
        },
      },
      "type": "mdxJsxFlowElement",
    },
  ],
  "position": {
    "end": {
      "column": 1,
      "line": 62,
      "offset": 3208,
    },
    "start": {
      "column": 1,
      "line": 1,
      "offset": 0,
    },
  },
  "type": "root",
}
`;
